@model  IEnumerable<QM.Core.Model.Tasks>
@{
    Layout = "~/Views/Shared/_LayoutAdminContent.cshtml";
}

<div class="row">
    <div class="col-sm-12">
        <div class="ibox float-e-margins">
            <!--
            <div class="ibox-title" style="border-bottom:none;background:#fff;">
                <h5>性能状态</h5>
            </div>
            -->
            <div class="ibox-content" style="border-top:none;">
                <div id="echarts-performance" style="height:240px;">
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        <div class="ibox">
            <div class="ibox-title">
                <h5>所有任务</h5>
                <div class="ibox-tools">
                    <a href="/task/add" class="btn btn-primary btn-xs">创建新任务</a>
                </div>
            </div>
            <div class="ibox-content">
                <div class="row m-b-sm m-t-sm">
                    <div class="col-md-1">
                        <button type="button" id="loading-example-btn" class="btn btn-white btn-sm"><i class="fa fa-refresh"></i> 刷新</button>
                    </div>
                    <div class="col-md-11">
                        <div class="input-group">
                            <input type="text" placeholder="请输入任务名称" class="input-sm form-control"> <span class="input-group-btn">
                                <button type="button" class="btn btn-sm btn-primary"> 搜索</button>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="project-list">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>排序</th>
                                <th>任务名称</th>
                                <th>任务类型</th>
                                <th>Cron</th>
                                <th>发送类型</th>
                                <th>状态</th>
                                <th class="project-actions">操作</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.idx</td>
                                <td>@item.taskName</td>
                                <td>@item.taskType</td>    
                                <td>@item.taskCron</td>
                                <td>@item.taskSendby</td>
                                <td>@item.taskState</td>
                                <td class="project-actions">
                                    <a href="/task/edit?idx=@item.idx" class="btn btn-default btn-sm"><i class="fa fa-play"></i> 执行 </a>
                                    <a href="/task/edit?idx=@item.idx" class="btn btn-default btn-sm"><i class="fa fa-pause"></i> 暂停 </a>
                                    <a href="/task/log?idx=@item.idx" class="btn btn-default btn-sm"><i class="fa fa-table"></i> 日志 </a>
                                    <br/>
                                    <a href="/task/edit?idx=@item.idx" class="btn btn-default btn-sm"><i class="fa fa-pencil"></i> 编辑 </a>
                                    <a href="/task/edit?idx=@item.idx" class="btn btn-default btn-sm"><i class="fa fa-trash"></i> 删除 </a>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-3.1.1.min.js")"></script>
<!-- ECharts -->
<script src="@Url.Content("~/Scripts/echarts.min.js")"></script>
<script type="text/javascript">

    var cdate = [];
    var cdata = [];
    var mdate = [];
    var mdata = [];
    var now = new Date();
    var memory = echarts.init(document.getElementById("echarts-performance"));
    memory.setOption({
        title: {
            text: '性能监控表'
        },
        tooltip: {
            trigger: 'axis',//坐标轴触发提示框，多用于柱状、折线图中
            formatter: '{b0}<br/><font color=#FF3333>&nbsp;●&nbsp;</font>{a0}' //控制提示框内容输出格式
        },
        legend: {//图表上方的类别显示
            data: ['CPU', '内存']
        },
        toolbox: {//工具栏显示
            feature: {
                saveAsImage: {}
            }
        },
        calculable: true,
        xAxis: [{//X轴
            type: 'category',
            data: [] //先设置数据值为空，后面用Ajax获取动态数据填入
        }],
        yAxis: [{ //Y轴
            type: 'value'
        }],
        series: [//系列（内容）列表
            {
                name: 'CPU',
                type: 'line',//折线图
                symbol: 'emptycircle',
                //areaStyle: {
                //    normal: {}
                //},
                data: []//数据值通过Ajax动态获取
            },
            {
                name: '内存',
                type: 'line',
                symbol: 'circle',//设置折线图中表示每个坐标点的符号；emptycircle：空心圆；emptyrect：空心矩形；circle：实心圆；emptydiamond：菱形
                data: []//数据值通过Ajax动态获取
            }
        ]
    });
    memory.showLoading();//数据加载完之前先显示一段简单的loading动画
    function add(shift) {
        $.post("/task/Performance", null, function (data) {
            if (data.result == true) {
                memory.hideLoading();
                mdata.push(data.memory);
                cdata.push(data.cpu);
                if (shift) {
                    console.log(mdata);
                    mdate.shift();
                    mdata.shift();
                    console.log(cdata);
                    cdata.shift();
                }
            }
        }, "json");
    }

    for (var i = 0; i < 30; i++) {
        add();
    }

    setInterval(function () {
        add(true);
        memory.setOption({
            series: [{
                data: cdata
            }, {
                data: mdata
            }]
        });
    }, 1000);


</script>